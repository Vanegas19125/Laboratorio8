

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 25 23:59:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	nvBANK0
   211  0035                     __pnvBANK0:
   212  0035                     _unidades:
   213  0035                     	ds	1
   214  0036                     _decenas:
   215  0036                     	ds	1
   216  0037                     _centenas:
   217  0037                     	ds	1
   218  001F                     _ADCON0	set	31
   219  0006                     _PORTB	set	6
   220  0005                     _PORTA	set	5
   221  0006                     _PORTBbits	set	6
   222  0008                     _PORTD	set	8
   223  000B                     _INTCONbits	set	11
   224  0001                     _TMR0	set	1
   225  001E                     _ADRESH	set	30
   226  0007                     _PORTC	set	7
   227  000C                     _PIR1bits	set	12
   228  001F                     _ADCON0bits	set	31
   229  005A                     _T0IF	set	90
   230  008C                     _PIE1bits	set	140
   231  0081                     _OPTION_REGbits	set	129
   232  009F                     _ADCON1	set	159
   233  0088                     _TRISD	set	136
   234  0087                     _TRISC	set	135
   235  0085                     _TRISA	set	133
   236  0086                     _TRISB	set	134
   237  008F                     _OSCCONbits	set	143
   238  0188                     _ANSEL	set	392
   239  0189                     _ANSELH	set	393
   240                           
   241                           	psect	cinit
   242  0011                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0011                     __initialization:
   246                           
   247                           ; Clear objects allocated to COMMON
   248  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   249  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  0013  1283               	bcf	3,5	;RP0=0, select bank0
   253  0014  1303               	bcf	3,6	;RP1=0, select bank0
   254  0015  01B8               	clrf	__pbssBANK0& (0+127)
   255  0016                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  0016                     __end_of__initialization:
   259  0016  0183               	clrf	3
   260  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  0078                     __pbssCOMMON:
   264  0078                     _banderas2:
   265  0078                     	ds	1
   266  0079                     _banderas:
   267  0079                     	ds	1
   268                           
   269                           	psect	bssBANK0
   270  0038                     __pbssBANK0:
   271  0038                     _numero:
   272  0038                     	ds	1
   273                           
   274                           	psect	cstackCOMMON
   275  0070                     __pcstackCOMMON:
   276  0070                     ?_tabla:
   277  0070                     ??_tabla:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_isr:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0070                     	ds	2
   289  0072                     tabla@display:
   290                           
   291                           ; 1 bytes @ 0x2
   292  0072                     	ds	1
   293  0073                     ??_isr:
   294                           
   295                           ; 1 bytes @ 0x3
   296  0073                     	ds	5
   297                           
   298                           	psect	cstackBANK0
   299  0020                     __pcstackBANK0:
   300  0020                     ?___awmod:
   301  0020                     ___awmod@divisor:	
   302                           ; 2 bytes @ 0x0
   303                           
   304                           
   305                           ; 2 bytes @ 0x0
   306  0020                     	ds	2
   307  0022                     ___awmod@dividend:
   308                           
   309                           ; 2 bytes @ 0x2
   310  0022                     	ds	2
   311  0024                     ??___awmod:
   312                           
   313                           ; 1 bytes @ 0x4
   314  0024                     	ds	1
   315  0025                     ___awmod@counter:
   316                           
   317                           ; 1 bytes @ 0x5
   318  0025                     	ds	1
   319  0026                     ___awmod@sign:
   320                           
   321                           ; 1 bytes @ 0x6
   322  0026                     	ds	1
   323  0027                     ?___awdiv:
   324  0027                     ___awdiv@divisor:	
   325                           ; 2 bytes @ 0x7
   326                           
   327                           
   328                           ; 2 bytes @ 0x7
   329  0027                     	ds	2
   330  0029                     ___awdiv@dividend:
   331                           
   332                           ; 2 bytes @ 0x9
   333  0029                     	ds	2
   334  002B                     ??___awdiv:
   335                           
   336                           ; 1 bytes @ 0xB
   337  002B                     	ds	1
   338  002C                     ___awdiv@counter:
   339                           
   340                           ; 1 bytes @ 0xC
   341  002C                     	ds	1
   342  002D                     ___awdiv@sign:
   343                           
   344                           ; 1 bytes @ 0xD
   345  002D                     	ds	1
   346  002E                     ___awdiv@quotient:
   347                           
   348                           ; 2 bytes @ 0xE
   349  002E                     	ds	2
   350  0030                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x10
   353  0030                     	ds	3
   354  0033                     _main$888:
   355                           
   356                           ; 2 bytes @ 0x13
   357  0033                     	ds	2
   358                           
   359                           	psect	maintext
   360  001A                     __pmaintext:	
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 130 in file "main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : B00/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       2       0       0       0
   382 ;;      Temps:          0       3       0       0       0
   383 ;;      Totals:         0       5       0       0       0
   384 ;;Total ram usage:        5 bytes
   385 ;; Hardware stack levels required when called:    3
   386 ;; This function calls:
   387 ;;		___awdiv
   388 ;;		___awmod
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  001A                     _main:
   397  001A                     l1206:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400                           
   401                           
   402                           ;main.c: 134:     INTCONbits.T0IF = 0;
   403  001A  1683               	bsf	3,5	;RP0=1, select bank1
   404  001B  1303               	bcf	3,6	;RP1=0, select bank1
   405  001C  170F               	bsf	15,6	;volatile
   406                           
   407                           ;main.c: 135: 
   408  001D  128F               	bcf	15,5	;volatile
   409                           
   410                           ;main.c: 136: 
   411  001E  120F               	bcf	15,4	;volatile
   412                           
   413                           ;main.c: 137:     INTCONbits.GIE = 1;
   414  001F  140F               	bsf	15,0	;volatile
   415  0020                     l1208:
   416                           
   417                           ;main.c: 140:     INTCONbits.PEIE = 1;
   418  0020  3014               	movlw	20
   419  0021  1683               	bsf	3,5	;RP0=1, select bank3
   420  0022  1703               	bsf	3,6	;RP1=1, select bank3
   421  0023  0089               	movwf	9	;volatile
   422  0024                     l1210:
   423                           
   424                           ;main.c: 141:     PIE1bits.ADIE = 1;
   425  0024  0188               	clrf	8	;volatile
   426  0025                     l1212:
   427                           
   428                           ;main.c: 143:     while (1)
   429  0025  3003               	movlw	3
   430  0026  1683               	bsf	3,5	;RP0=1, select bank1
   431  0027  1303               	bcf	3,6	;RP1=0, select bank1
   432  0028  0086               	movwf	6	;volatile
   433                           
   434                           ;main.c: 144:     {
   435  0029  0185               	clrf	5	;volatile
   436                           
   437                           ;main.c: 145:         centenas = numero/100;
   438  002A  0187               	clrf	7	;volatile
   439                           
   440                           ;main.c: 146:         decenas = numero%100/10;
   441  002B  0188               	clrf	8	;volatile
   442                           
   443                           ;main.c: 148:      }
   444  002C  1283               	bcf	3,5	;RP0=0, select bank0
   445  002D  1303               	bcf	3,6	;RP1=0, select bank0
   446  002E  0185               	clrf	5	;volatile
   447                           
   448                           ;main.c: 149: }
   449  002F  0186               	clrf	6	;volatile
   450  0030  0187               	clrf	7	;volatile
   451  0031  0188               	clrf	8	;volatile
   452  0032                     l1214:
   453  0032  3033               	movlw	51
   454  0033  009F               	movwf	31	;volatile
   455  0034                     l1216:
   456  0034  1683               	bsf	3,5	;RP0=1, select bank1
   457  0035  1303               	bcf	3,6	;RP1=0, select bank1
   458  0036  019F               	clrf	31	;volatile
   459  0037                     l1218:
   460  0037  1281               	bcf	1,5	;volatile
   461  0038                     l1220:
   462  0038  1181               	bcf	1,3	;volatile
   463  0039                     l1222:
   464  0039  1101               	bcf	1,2	;volatile
   465  003A                     l1224:
   466  003A  1481               	bsf	1,1	;volatile
   467  003B                     l1226:
   468  003B  1401               	bsf	1,0	;volatile
   469  003C  3064               	movlw	100
   470  003D  1283               	bcf	3,5	;RP0=0, select bank0
   471  003E  1303               	bcf	3,6	;RP1=0, select bank0
   472  003F  0081               	movwf	1	;volatile
   473  0040                     l1228:
   474  0040  110B               	bcf	11,2	;volatile
   475  0041                     l1230:
   476  0041  178B               	bsf	11,7	;volatile
   477  0042                     l1232:
   478  0042  158B               	bsf	11,3	;volatile
   479  0043                     l1234:
   480  0043  168B               	bsf	11,5	;volatile
   481  0044                     l1236:
   482  0044  170B               	bsf	11,6	;volatile
   483  0045                     l1238:
   484  0045  1683               	bsf	3,5	;RP0=1, select bank1
   485  0046  1303               	bcf	3,6	;RP1=0, select bank1
   486  0047  170C               	bsf	12,6	;volatile
   487  0048                     l1240:
   488  0048  3064               	movlw	100
   489  0049  1283               	bcf	3,5	;RP0=0, select bank0
   490  004A  00A7               	movwf	___awdiv@divisor
   491  004B  3000               	movlw	0
   492  004C  00A8               	movwf	___awdiv@divisor+1
   493  004D  0838               	movf	_numero,w
   494  004E  00B0               	movwf	??_main
   495  004F  01B1               	clrf	??_main+1
   496  0050  0830               	movf	??_main,w
   497  0051  00A9               	movwf	___awdiv@dividend
   498  0052  0831               	movf	??_main+1,w
   499  0053  00AA               	movwf	___awdiv@dividend+1
   500  0054  120A  118A  212C  120A  118A  	fcall	___awdiv
   501  0059  1283               	bcf	3,5	;RP0=0, select bank0
   502  005A  1303               	bcf	3,6	;RP1=0, select bank0
   503  005B  0827               	movf	?___awdiv,w
   504  005C  00B2               	movwf	??_main+2
   505  005D  0832               	movf	??_main+2,w
   506  005E  00B7               	movwf	_centenas
   507  005F                     l1242:
   508  005F  300A               	movlw	10
   509  0060  00A7               	movwf	___awdiv@divisor
   510  0061  3000               	movlw	0
   511  0062  00A8               	movwf	___awdiv@divisor+1
   512  0063  0838               	movf	_numero,w
   513  0064  00B0               	movwf	??_main
   514  0065  01B1               	clrf	??_main+1
   515  0066  0830               	movf	??_main,w
   516  0067  00A2               	movwf	___awmod@dividend
   517  0068  0831               	movf	??_main+1,w
   518  0069  00A3               	movwf	___awmod@dividend+1
   519  006A  3064               	movlw	100
   520  006B  00A0               	movwf	___awmod@divisor
   521  006C  3000               	movlw	0
   522  006D  00A1               	movwf	___awmod@divisor+1
   523  006E  120A  118A  2195  120A  118A  	fcall	___awmod
   524  0073  1283               	bcf	3,5	;RP0=0, select bank0
   525  0074  1303               	bcf	3,6	;RP1=0, select bank0
   526  0075  0821               	movf	?___awmod+1,w
   527  0076  00AA               	movwf	___awdiv@dividend+1
   528  0077  0820               	movf	?___awmod,w
   529  0078  00A9               	movwf	___awdiv@dividend
   530  0079  120A  118A  212C  120A  118A  	fcall	___awdiv
   531  007E  1283               	bcf	3,5	;RP0=0, select bank0
   532  007F  1303               	bcf	3,6	;RP1=0, select bank0
   533  0080  0827               	movf	?___awdiv,w
   534  0081  00B2               	movwf	??_main+2
   535  0082  0832               	movf	??_main+2,w
   536  0083  00B6               	movwf	_decenas
   537  0084                     l1244:
   538  0084  0838               	movf	_numero,w
   539  0085  00B0               	movwf	??_main
   540  0086  01B1               	clrf	??_main+1
   541  0087  0830               	movf	??_main,w
   542  0088  00A2               	movwf	___awmod@dividend
   543  0089  0831               	movf	??_main+1,w
   544  008A  00A3               	movwf	___awmod@dividend+1
   545  008B  3064               	movlw	100
   546  008C  00A0               	movwf	___awmod@divisor
   547  008D  3000               	movlw	0
   548  008E  00A1               	movwf	___awmod@divisor+1
   549  008F  120A  118A  2195  120A  118A  	fcall	___awmod
   550  0094  1283               	bcf	3,5	;RP0=0, select bank0
   551  0095  1303               	bcf	3,6	;RP1=0, select bank0
   552  0096  0821               	movf	?___awmod+1,w
   553  0097  00B4               	movwf	_main$888+1
   554  0098  0820               	movf	?___awmod,w
   555  0099  00B3               	movwf	_main$888
   556  009A                     l1246:
   557  009A  300A               	movlw	10
   558  009B  00A0               	movwf	___awmod@divisor
   559  009C  3000               	movlw	0
   560  009D  00A1               	movwf	___awmod@divisor+1
   561  009E  0834               	movf	_main$888+1,w
   562  009F  00A3               	movwf	___awmod@dividend+1
   563  00A0  0833               	movf	_main$888,w
   564  00A1  00A2               	movwf	___awmod@dividend
   565  00A2  120A  118A  2195  120A  118A  	fcall	___awmod
   566  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   567  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   568  00A9  0820               	movf	?___awmod,w
   569  00AA  00B0               	movwf	??_main
   570  00AB  0830               	movf	??_main,w
   571  00AC  00B5               	movwf	_unidades
   572  00AD  2848               	goto	l1240
   573  00AE  120A  118A  280E   	ljmp	start
   574  00B1                     __end_of_main:
   575                           
   576                           	psect	text1
   577  0195                     __ptext1:	
   578 ;; *************** function ___awmod *****************
   579 ;; Defined at:
   580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  divisor         2    0[BANK0 ] int 
   583 ;;  dividend        2    2[BANK0 ] int 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  sign            1    6[BANK0 ] unsigned char 
   586 ;;  counter         1    5[BANK0 ] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  2    0[BANK0 ] int 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       4       0       0       0
   597 ;;      Locals:         0       2       0       0       0
   598 ;;      Temps:          0       1       0       0       0
   599 ;;      Totals:         0       7       0       0       0
   600 ;;Total ram usage:        7 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    2
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function ___awmod
   612  0195                     ___awmod:
   613  0195                     l1104:	
   614                           ;incstack = 0
   615                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   616                           
   617  0195  1283               	bcf	3,5	;RP0=0, select bank0
   618  0196  1303               	bcf	3,6	;RP1=0, select bank0
   619  0197  01A6               	clrf	___awmod@sign
   620  0198                     l1106:
   621  0198  1FA3               	btfss	___awmod@dividend+1,7
   622  0199  299B               	goto	u341
   623  019A  299C               	goto	u340
   624  019B                     u341:
   625  019B  29A3               	goto	l1112
   626  019C                     u340:
   627  019C                     l1108:
   628  019C  09A2               	comf	___awmod@dividend,f
   629  019D  09A3               	comf	___awmod@dividend+1,f
   630  019E  0AA2               	incf	___awmod@dividend,f
   631  019F  1903               	skipnz
   632  01A0  0AA3               	incf	___awmod@dividend+1,f
   633  01A1                     l1110:
   634  01A1  01A6               	clrf	___awmod@sign
   635  01A2  0AA6               	incf	___awmod@sign,f
   636  01A3                     l1112:
   637  01A3  1FA1               	btfss	___awmod@divisor+1,7
   638  01A4  29A6               	goto	u351
   639  01A5  29A7               	goto	u350
   640  01A6                     u351:
   641  01A6  29AC               	goto	l1116
   642  01A7                     u350:
   643  01A7                     l1114:
   644  01A7  09A0               	comf	___awmod@divisor,f
   645  01A8  09A1               	comf	___awmod@divisor+1,f
   646  01A9  0AA0               	incf	___awmod@divisor,f
   647  01AA  1903               	skipnz
   648  01AB  0AA1               	incf	___awmod@divisor+1,f
   649  01AC                     l1116:
   650  01AC  0820               	movf	___awmod@divisor,w
   651  01AD  0421               	iorwf	___awmod@divisor+1,w
   652  01AE  1903               	btfsc	3,2
   653  01AF  29B1               	goto	u361
   654  01B0  29B2               	goto	u360
   655  01B1                     u361:
   656  01B1  29E1               	goto	l1134
   657  01B2                     u360:
   658  01B2                     l1118:
   659  01B2  01A5               	clrf	___awmod@counter
   660  01B3  0AA5               	incf	___awmod@counter,f
   661  01B4  29C0               	goto	l1124
   662  01B5                     l1120:
   663  01B5  3001               	movlw	1
   664  01B6                     u375:
   665  01B6  1003               	clrc
   666  01B7  0DA0               	rlf	___awmod@divisor,f
   667  01B8  0DA1               	rlf	___awmod@divisor+1,f
   668  01B9  3EFF               	addlw	-1
   669  01BA  1D03               	skipz
   670  01BB  29B6               	goto	u375
   671  01BC                     l1122:
   672  01BC  3001               	movlw	1
   673  01BD  00A4               	movwf	??___awmod
   674  01BE  0824               	movf	??___awmod,w
   675  01BF  07A5               	addwf	___awmod@counter,f
   676  01C0                     l1124:
   677  01C0  1FA1               	btfss	___awmod@divisor+1,7
   678  01C1  29C3               	goto	u381
   679  01C2  29C4               	goto	u380
   680  01C3                     u381:
   681  01C3  29B5               	goto	l1120
   682  01C4                     u380:
   683  01C4                     l1126:
   684  01C4  0821               	movf	___awmod@divisor+1,w
   685  01C5  0223               	subwf	___awmod@dividend+1,w
   686  01C6  1D03               	skipz
   687  01C7  29CA               	goto	u395
   688  01C8  0820               	movf	___awmod@divisor,w
   689  01C9  0222               	subwf	___awmod@dividend,w
   690  01CA                     u395:
   691  01CA  1C03               	skipc
   692  01CB  29CD               	goto	u391
   693  01CC  29CE               	goto	u390
   694  01CD                     u391:
   695  01CD  29D4               	goto	l1130
   696  01CE                     u390:
   697  01CE                     l1128:
   698  01CE  0820               	movf	___awmod@divisor,w
   699  01CF  02A2               	subwf	___awmod@dividend,f
   700  01D0  0821               	movf	___awmod@divisor+1,w
   701  01D1  1C03               	skipc
   702  01D2  03A3               	decf	___awmod@dividend+1,f
   703  01D3  02A3               	subwf	___awmod@dividend+1,f
   704  01D4                     l1130:
   705  01D4  3001               	movlw	1
   706  01D5                     u405:
   707  01D5  1003               	clrc
   708  01D6  0CA1               	rrf	___awmod@divisor+1,f
   709  01D7  0CA0               	rrf	___awmod@divisor,f
   710  01D8  3EFF               	addlw	-1
   711  01D9  1D03               	skipz
   712  01DA  29D5               	goto	u405
   713  01DB                     l1132:
   714  01DB  3001               	movlw	1
   715  01DC  02A5               	subwf	___awmod@counter,f
   716  01DD  1D03               	btfss	3,2
   717  01DE  29E0               	goto	u411
   718  01DF  29E1               	goto	u410
   719  01E0                     u411:
   720  01E0  29C4               	goto	l1126
   721  01E1                     u410:
   722  01E1                     l1134:
   723  01E1  0826               	movf	___awmod@sign,w
   724  01E2  1903               	btfsc	3,2
   725  01E3  29E5               	goto	u421
   726  01E4  29E6               	goto	u420
   727  01E5                     u421:
   728  01E5  29EB               	goto	l1138
   729  01E6                     u420:
   730  01E6                     l1136:
   731  01E6  09A2               	comf	___awmod@dividend,f
   732  01E7  09A3               	comf	___awmod@dividend+1,f
   733  01E8  0AA2               	incf	___awmod@dividend,f
   734  01E9  1903               	skipnz
   735  01EA  0AA3               	incf	___awmod@dividend+1,f
   736  01EB                     l1138:
   737  01EB  0823               	movf	___awmod@dividend+1,w
   738  01EC  00A1               	movwf	?___awmod+1
   739  01ED  0822               	movf	___awmod@dividend,w
   740  01EE  00A0               	movwf	?___awmod
   741  01EF                     l346:
   742  01EF  0008               	return
   743  01F0                     __end_of___awmod:
   744                           
   745                           	psect	text2
   746  012C                     __ptext2:	
   747 ;; *************** function ___awdiv *****************
   748 ;; Defined at:
   749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  divisor         2    7[BANK0 ] int 
   752 ;;  dividend        2    9[BANK0 ] int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  quotient        2   14[BANK0 ] int 
   755 ;;  sign            1   13[BANK0 ] unsigned char 
   756 ;;  counter         1   12[BANK0 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2    7[BANK0 ] int 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       4       0       0       0
   767 ;;      Locals:         0       4       0       0       0
   768 ;;      Temps:          0       1       0       0       0
   769 ;;      Totals:         0       9       0       0       0
   770 ;;Total ram usage:        9 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    2
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function ___awdiv
   782  012C                     ___awdiv:
   783  012C                     l1060:	
   784                           ;incstack = 0
   785                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   786                           
   787  012C  1283               	bcf	3,5	;RP0=0, select bank0
   788  012D  1303               	bcf	3,6	;RP1=0, select bank0
   789  012E  01AD               	clrf	___awdiv@sign
   790  012F                     l1062:
   791  012F  1FA8               	btfss	___awdiv@divisor+1,7
   792  0130  2932               	goto	u241
   793  0131  2933               	goto	u240
   794  0132                     u241:
   795  0132  293A               	goto	l1068
   796  0133                     u240:
   797  0133                     l1064:
   798  0133  09A7               	comf	___awdiv@divisor,f
   799  0134  09A8               	comf	___awdiv@divisor+1,f
   800  0135  0AA7               	incf	___awdiv@divisor,f
   801  0136  1903               	skipnz
   802  0137  0AA8               	incf	___awdiv@divisor+1,f
   803  0138                     l1066:
   804  0138  01AD               	clrf	___awdiv@sign
   805  0139  0AAD               	incf	___awdiv@sign,f
   806  013A                     l1068:
   807  013A  1FAA               	btfss	___awdiv@dividend+1,7
   808  013B  293D               	goto	u251
   809  013C  293E               	goto	u250
   810  013D                     u251:
   811  013D  2947               	goto	l1074
   812  013E                     u250:
   813  013E                     l1070:
   814  013E  09A9               	comf	___awdiv@dividend,f
   815  013F  09AA               	comf	___awdiv@dividend+1,f
   816  0140  0AA9               	incf	___awdiv@dividend,f
   817  0141  1903               	skipnz
   818  0142  0AAA               	incf	___awdiv@dividend+1,f
   819  0143                     l1072:
   820  0143  3001               	movlw	1
   821  0144  00AB               	movwf	??___awdiv
   822  0145  082B               	movf	??___awdiv,w
   823  0146  06AD               	xorwf	___awdiv@sign,f
   824  0147                     l1074:
   825  0147  01AE               	clrf	___awdiv@quotient
   826  0148  01AF               	clrf	___awdiv@quotient+1
   827  0149                     l1076:
   828  0149  0827               	movf	___awdiv@divisor,w
   829  014A  0428               	iorwf	___awdiv@divisor+1,w
   830  014B  1903               	btfsc	3,2
   831  014C  294E               	goto	u261
   832  014D  294F               	goto	u260
   833  014E                     u261:
   834  014E  2986               	goto	l1096
   835  014F                     u260:
   836  014F                     l1078:
   837  014F  01AC               	clrf	___awdiv@counter
   838  0150  0AAC               	incf	___awdiv@counter,f
   839  0151  295D               	goto	l1084
   840  0152                     l1080:
   841  0152  3001               	movlw	1
   842  0153                     u275:
   843  0153  1003               	clrc
   844  0154  0DA7               	rlf	___awdiv@divisor,f
   845  0155  0DA8               	rlf	___awdiv@divisor+1,f
   846  0156  3EFF               	addlw	-1
   847  0157  1D03               	skipz
   848  0158  2953               	goto	u275
   849  0159                     l1082:
   850  0159  3001               	movlw	1
   851  015A  00AB               	movwf	??___awdiv
   852  015B  082B               	movf	??___awdiv,w
   853  015C  07AC               	addwf	___awdiv@counter,f
   854  015D                     l1084:
   855  015D  1FA8               	btfss	___awdiv@divisor+1,7
   856  015E  2960               	goto	u281
   857  015F  2961               	goto	u280
   858  0160                     u281:
   859  0160  2952               	goto	l1080
   860  0161                     u280:
   861  0161                     l1086:
   862  0161  3001               	movlw	1
   863  0162                     u295:
   864  0162  1003               	clrc
   865  0163  0DAE               	rlf	___awdiv@quotient,f
   866  0164  0DAF               	rlf	___awdiv@quotient+1,f
   867  0165  3EFF               	addlw	-1
   868  0166  1D03               	skipz
   869  0167  2962               	goto	u295
   870  0168  0828               	movf	___awdiv@divisor+1,w
   871  0169  022A               	subwf	___awdiv@dividend+1,w
   872  016A  1D03               	skipz
   873  016B  296E               	goto	u305
   874  016C  0827               	movf	___awdiv@divisor,w
   875  016D  0229               	subwf	___awdiv@dividend,w
   876  016E                     u305:
   877  016E  1C03               	skipc
   878  016F  2971               	goto	u301
   879  0170  2972               	goto	u300
   880  0171                     u301:
   881  0171  2979               	goto	l1092
   882  0172                     u300:
   883  0172                     l1088:
   884  0172  0827               	movf	___awdiv@divisor,w
   885  0173  02A9               	subwf	___awdiv@dividend,f
   886  0174  0828               	movf	___awdiv@divisor+1,w
   887  0175  1C03               	skipc
   888  0176  03AA               	decf	___awdiv@dividend+1,f
   889  0177  02AA               	subwf	___awdiv@dividend+1,f
   890  0178                     l1090:
   891  0178  142E               	bsf	___awdiv@quotient,0
   892  0179                     l1092:
   893  0179  3001               	movlw	1
   894  017A                     u315:
   895  017A  1003               	clrc
   896  017B  0CA8               	rrf	___awdiv@divisor+1,f
   897  017C  0CA7               	rrf	___awdiv@divisor,f
   898  017D  3EFF               	addlw	-1
   899  017E  1D03               	skipz
   900  017F  297A               	goto	u315
   901  0180                     l1094:
   902  0180  3001               	movlw	1
   903  0181  02AC               	subwf	___awdiv@counter,f
   904  0182  1D03               	btfss	3,2
   905  0183  2985               	goto	u321
   906  0184  2986               	goto	u320
   907  0185                     u321:
   908  0185  2961               	goto	l1086
   909  0186                     u320:
   910  0186                     l1096:
   911  0186  082D               	movf	___awdiv@sign,w
   912  0187  1903               	btfsc	3,2
   913  0188  298A               	goto	u331
   914  0189  298B               	goto	u330
   915  018A                     u331:
   916  018A  2990               	goto	l1100
   917  018B                     u330:
   918  018B                     l1098:
   919  018B  09AE               	comf	___awdiv@quotient,f
   920  018C  09AF               	comf	___awdiv@quotient+1,f
   921  018D  0AAE               	incf	___awdiv@quotient,f
   922  018E  1903               	skipnz
   923  018F  0AAF               	incf	___awdiv@quotient+1,f
   924  0190                     l1100:
   925  0190  082F               	movf	___awdiv@quotient+1,w
   926  0191  00A8               	movwf	?___awdiv+1
   927  0192  082E               	movf	___awdiv@quotient,w
   928  0193  00A7               	movwf	?___awdiv
   929  0194                     l333:
   930  0194  0008               	return
   931  0195                     __end_of___awdiv:
   932                           
   933                           	psect	text3
   934  00B1                     __ptext3:	
   935 ;; *************** function _isr *****************
   936 ;; Defined at:
   937 ;;		line 73 in file "main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          5       0       0       0       0
   954 ;;      Totals:         5       0       0       0       0
   955 ;;Total ram usage:        5 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    1
   958 ;; This function calls:
   959 ;;		_tabla
   960 ;; This function is called by:
   961 ;;		Interrupt level 1
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _isr
   967  00B1                     _isr:
   968  00B1                     i1l1142:
   969                           
   970                           ;main.c: 75:                 PORTBbits.RB7 = 0;
   971  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   972  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   973  00B3  149F               	bsf	31,1	;volatile
   974                           
   975                           ;main.c: 77:                 break;
   976  00B4  1F0C               	btfss	12,6	;volatile
   977  00B5  28B7               	goto	u43_21
   978  00B6  28B8               	goto	u43_20
   979  00B7                     u43_21:
   980  00B7  28DA               	goto	i1l1158
   981  00B8                     u43_20:
   982  00B8                     i1l1144:
   983                           
   984                           ;main.c: 79:                 PORTD = tabla(decenas);
   985  00B8  0C1F               	rrf	31,w	;volatile
   986  00B9  00F3               	movwf	??_isr
   987  00BA  0C73               	rrf	??_isr,w
   988  00BB  390F               	andlw	15
   989  00BC  3A0C               	xorlw	12
   990  00BD  1D03               	skipz
   991  00BE  28C0               	goto	u44_21
   992  00BF  28C1               	goto	u44_20
   993  00C0                     u44_21:
   994  00C0  28C8               	goto	i1l1150
   995  00C1                     u44_20:
   996  00C1                     i1l1146:
   997                           
   998                           ;main.c: 81:                 PORTBbits.RB5 = 0;
   999  00C1  081E               	movf	30,w	;volatile
  1000  00C2  0087               	movwf	7	;volatile
  1001  00C3                     i1l1148:
  1002                           
  1003                           ;main.c: 82:                 PORTBbits.RB6 = 1;
  1004  00C3  081F               	movf	31,w	;volatile
  1005  00C4  39C3               	andlw	-61
  1006  00C5  3828               	iorlw	40
  1007  00C6  009F               	movwf	31	;volatile
  1008                           
  1009                           ;main.c: 84:                 banderas++;
  1010  00C7  28D9               	goto	i1l1156
  1011  00C8                     i1l1150:
  1012  00C8  0C1F               	rrf	31,w	;volatile
  1013  00C9  00F3               	movwf	??_isr
  1014  00CA  0C73               	rrf	??_isr,w
  1015  00CB  390F               	andlw	15
  1016  00CC  3A0A               	xorlw	10
  1017  00CD  1D03               	skipz
  1018  00CE  28D0               	goto	u45_21
  1019  00CF  28D1               	goto	u45_20
  1020  00D0                     u45_21:
  1021  00D0  28D9               	goto	i1l1156
  1022  00D1                     u45_20:
  1023  00D1                     i1l1152:
  1024                           
  1025                           ;main.c: 87:                 PORTD = tabla(unidades);
  1026  00D1  081E               	movf	30,w	;volatile
  1027  00D2  00F3               	movwf	??_isr
  1028  00D3  0873               	movf	??_isr,w
  1029  00D4  00B8               	movwf	_numero
  1030  00D5                     i1l1154:
  1031                           
  1032                           ;main.c: 88: 
  1033  00D5  081F               	movf	31,w	;volatile
  1034  00D6  39C3               	andlw	-61
  1035  00D7  3830               	iorlw	48
  1036  00D8  009F               	movwf	31	;volatile
  1037  00D9                     i1l1156:
  1038                           
  1039                           ;main.c: 90:                 PORTBbits.RB6 = 0;
  1040  00D9  130C               	bcf	12,6	;volatile
  1041  00DA                     i1l1158:
  1042                           
  1043                           ;main.c: 93:                 break;
  1044  00DA  1D0B               	btfss	11,2	;volatile
  1045  00DB  28DD               	goto	u46_21
  1046  00DC  28DE               	goto	u46_20
  1047  00DD                     u46_21:
  1048  00DD  2922               	goto	i1l80
  1049  00DE                     u46_20:
  1050  00DE                     i1l1160:
  1051                           
  1052                           ;main.c: 96:        INTCONbits.RBIF = 0;
  1053  00DE  307D               	movlw	125
  1054  00DF  0081               	movwf	1	;volatile
  1055  00E0                     i1l1162:
  1056                           
  1057                           ;main.c: 97: }
  1058  00E0  110B               	bcf	11,2	;volatile
  1059  00E1                     i1l1164:
  1060                           
  1061                           ;main.c: 99: 
  1062  00E1  0188               	clrf	8	;volatile
  1063                           
  1064                           ;main.c: 101: 
  1065  00E2  290F               	goto	i1l1198
  1066  00E3                     i1l1166:
  1067                           
  1068                           ;main.c: 103:     OSCCONbits.IRCF1 = 0;
  1069  00E3  0837               	movf	_centenas,w
  1070  00E4  120A  118A  21F0  120A  118A  	fcall	_tabla
  1071  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1072  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1073  00EB  0088               	movwf	8	;volatile
  1074  00EC                     i1l1168:
  1075                           
  1076                           ;main.c: 105:     OSCCONbits.SCS = 1;
  1077  00EC  1686               	bsf	6,5	;volatile
  1078  00ED                     i1l1170:
  1079                           
  1080                           ;main.c: 106: 
  1081  00ED  1306               	bcf	6,6	;volatile
  1082  00EE                     i1l1172:
  1083                           
  1084                           ;main.c: 107: 
  1085  00EE  1386               	bcf	6,7	;volatile
  1086  00EF                     i1l1174:
  1087                           
  1088                           ;main.c: 108:     ANSELH = 0b010100;
  1089  00EF  3001               	movlw	1
  1090  00F0  00F3               	movwf	??_isr
  1091  00F1  0873               	movf	??_isr,w
  1092  00F2  07F9               	addwf	_banderas,f
  1093                           
  1094                           ;main.c: 109:     ANSEL = 0;
  1095  00F3  2922               	goto	i1l80
  1096  00F4                     i1l1176:
  1097                           
  1098                           ;main.c: 111:     TRISB = 0b00000011;
  1099  00F4  0836               	movf	_decenas,w
  1100  00F5  120A  118A  21F0  120A  118A  	fcall	_tabla
  1101  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00FC  0088               	movwf	8	;volatile
  1104  00FD                     i1l1178:
  1105                           
  1106                           ;main.c: 113:     TRISC = 0;
  1107  00FD  1286               	bcf	6,5	;volatile
  1108  00FE                     i1l1180:
  1109                           
  1110                           ;main.c: 114:     TRISD = 0;
  1111  00FE  1706               	bsf	6,6	;volatile
  1112  00FF                     i1l1182:
  1113                           
  1114                           ;main.c: 115: 
  1115  00FF  1386               	bcf	6,7	;volatile
  1116  0100  28EF               	goto	i1l1174
  1117  0101                     i1l1186:
  1118                           
  1119                           ;main.c: 119:     PORTD = 0;
  1120  0101  0835               	movf	_unidades,w
  1121  0102  120A  118A  21F0  120A  118A  	fcall	_tabla
  1122  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0109  0088               	movwf	8	;volatile
  1125  010A                     i1l1188:
  1126                           
  1127                           ;main.c: 121: 
  1128  010A  1286               	bcf	6,5	;volatile
  1129  010B                     i1l1190:
  1130                           
  1131                           ;main.c: 122:     ADCON0 = 0b00110011;
  1132  010B  1306               	bcf	6,6	;volatile
  1133  010C                     i1l1192:
  1134                           
  1135                           ;main.c: 123:     ADCON1 = 0b00000000;
  1136  010C  1786               	bsf	6,7	;volatile
  1137  010D                     i1l1194:
  1138                           
  1139                           ;main.c: 124: 
  1140  010D  01F9               	clrf	_banderas
  1141                           
  1142                           ;main.c: 125: 
  1143  010E  2922               	goto	i1l80
  1144  010F                     i1l1198:
  1145  010F  0879               	movf	_banderas,w
  1146  0110  00F3               	movwf	??_isr
  1147  0111  01F4               	clrf	??_isr+1
  1148                           
  1149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 0 to 0
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ; direct_byte           11     8 (fixed)
  1156                           ; jumptable            260     6 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  0112  0874               	movf	??_isr+1,w
  1159  0113  3A00               	xorlw	0	; case 0
  1160  0114  1903               	skipnz
  1161  0115  2917               	goto	i1l1298
  1162  0116  2922               	goto	i1l80
  1163  0117                     i1l1298:
  1164                           
  1165                           ; Switch size 1, requested type "simple"
  1166                           ; Number of cases is 3, Range of values is 0 to 2
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte           10     6 (average)
  1170                           ; direct_byte           17     8 (fixed)
  1171                           ; jumptable            260     6 (fixed)
  1172                           ;	Chosen strategy is simple_byte
  1173  0117  0873               	movf	??_isr,w
  1174  0118  3A00               	xorlw	0	; case 0
  1175  0119  1903               	skipnz
  1176  011A  28E3               	goto	i1l1166
  1177  011B  3A01               	xorlw	1	; case 1
  1178  011C  1903               	skipnz
  1179  011D  28F4               	goto	i1l1176
  1180  011E  3A03               	xorlw	3	; case 2
  1181  011F  1903               	skipnz
  1182  0120  2901               	goto	i1l1186
  1183  0121  2922               	goto	i1l80
  1184  0122                     i1l80:	
  1185                           ;main.c: 127:     OPTION_REGbits.PSA = 0;
  1186                           
  1187                           
  1188                           ;main.c: 128:     OPTION_REGbits.PS2 = 0;
  1189  0122  100B               	bcf	11,0	;volatile
  1190  0123                     i1l86:
  1191  0123  0877               	movf	??_isr+4,w
  1192  0124  008A               	movwf	10
  1193  0125  0876               	movf	??_isr+3,w
  1194  0126  0084               	movwf	4
  1195  0127  0E75               	swapf	??_isr+2,w
  1196  0128  0083               	movwf	3
  1197  0129  0EFE               	swapf	btemp,f
  1198  012A  0E7E               	swapf	btemp,w
  1199  012B  0009               	retfie
  1200  012C                     __end_of_isr:
  1201                           
  1202                           	psect	intentry
  1203  0004                     __pintentry:	
  1204                           ;incstack = 0
  1205                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1206                           
  1207  0004                     interrupt_function:
  1208  007E                     saved_w	set	btemp
  1209  0004  00FE               	movwf	btemp
  1210  0005  0E03               	swapf	3,w
  1211  0006  00F5               	movwf	??_isr+2
  1212  0007  0804               	movf	4,w
  1213  0008  00F6               	movwf	??_isr+3
  1214  0009  080A               	movf	10,w
  1215  000A  00F7               	movwf	??_isr+4
  1216  000B  120A  118A  28B1   	ljmp	_isr
  1217                           
  1218                           	psect	text4
  1219  01F0                     __ptext4:	
  1220 ;; *************** function _tabla *****************
  1221 ;; Defined at:
  1222 ;;		line 39 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  display         1    wreg     unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  display         1    2[COMMON] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0
  1237 ;;      Locals:         1       0       0       0       0
  1238 ;;      Temps:          2       0       0       0       0
  1239 ;;      Totals:         3       0       0       0       0
  1240 ;;Total ram usage:        3 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_isr
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _tabla
  1251  01F0                     _tabla:
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1255                           ;tabla@display stored from wreg
  1256  01F0  00F2               	movwf	tabla@display
  1257  01F1                     i1l992:
  1258                           
  1259                           ;main.c: 41: void __attribute__((picinterrupt(("")))) isr(void){
  1260  01F1  2A06               	goto	i1l1054
  1261  01F2                     i1l994:
  1262                           
  1263                           ;main.c: 43:     ADCON0bits.GO = 1;
  1264  01F2  303F               	movlw	63
  1265  01F3  2A2E               	goto	i1l61
  1266  01F4                     i1l1000:
  1267                           
  1268                           ;main.c: 46: 
  1269  01F4  3006               	movlw	6
  1270  01F5  2A2E               	goto	i1l61
  1271  01F6                     i1l1006:
  1272                           
  1273                           ;main.c: 49:         PORTC = ADRESH;
  1274  01F6  305B               	movlw	91
  1275  01F7  2A2E               	goto	i1l61
  1276  01F8                     i1l1012:
  1277                           
  1278                           ;main.c: 52:     }
  1279  01F8  304F               	movlw	79
  1280  01F9  2A2E               	goto	i1l61
  1281  01FA                     i1l1018:
  1282                           
  1283                           ;main.c: 55:         numero = ADRESH;
  1284  01FA  3066               	movlw	102
  1285  01FB  2A2E               	goto	i1l61
  1286  01FC                     i1l1024:
  1287                           
  1288                           ;main.c: 58:     PIR1bits.ADIF = 0;
  1289  01FC  306D               	movlw	109
  1290  01FD  2A2E               	goto	i1l61
  1291  01FE                     i1l1030:
  1292                           
  1293                           ;main.c: 61:     if (T0IF == 1) {
  1294  01FE  307D               	movlw	125
  1295  01FF  2A2E               	goto	i1l61
  1296  0200                     i1l1034:
  1297                           
  1298                           ;main.c: 63: 
  1299  0200  3007               	movlw	7
  1300  0201  2A2E               	goto	i1l61
  1301  0202                     i1l1040:
  1302                           
  1303                           ;main.c: 66: 
  1304  0202  307F               	movlw	127
  1305  0203  2A2E               	goto	i1l61
  1306  0204                     i1l1046:
  1307                           
  1308                           ;main.c: 69:         switch(banderas) {
  1309  0204  3067               	movlw	103
  1310  0205  2A2E               	goto	i1l61
  1311  0206                     i1l1054:
  1312  0206  0872               	movf	tabla@display,w
  1313  0207  00F0               	movwf	??_tabla
  1314  0208  01F1               	clrf	??_tabla+1
  1315                           
  1316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1317                           ; Switch size 1, requested type "simple"
  1318                           ; Number of cases is 1, Range of values is 0 to 0
  1319                           ; switch strategies available:
  1320                           ; Name         Instructions Cycles
  1321                           ; simple_byte            4     3 (average)
  1322                           ; direct_byte           11     8 (fixed)
  1323                           ; jumptable            260     6 (fixed)
  1324                           ;	Chosen strategy is simple_byte
  1325  0209  0871               	movf	??_tabla+1,w
  1326  020A  3A00               	xorlw	0	; case 0
  1327  020B  1903               	skipnz
  1328  020C  2A0E               	goto	i1l1300
  1329  020D  2A2E               	goto	i1l61
  1330  020E                     i1l1300:
  1331                           
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 10, Range of values is 0 to 9
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte           31    16 (average)
  1337                           ; direct_byte           38     8 (fixed)
  1338                           ; jumptable            260     6 (fixed)
  1339                           ;	Chosen strategy is simple_byte
  1340  020E  0870               	movf	??_tabla,w
  1341  020F  3A00               	xorlw	0	; case 0
  1342  0210  1903               	skipnz
  1343  0211  29F2               	goto	i1l994
  1344  0212  3A01               	xorlw	1	; case 1
  1345  0213  1903               	skipnz
  1346  0214  29F4               	goto	i1l1000
  1347  0215  3A03               	xorlw	3	; case 2
  1348  0216  1903               	skipnz
  1349  0217  29F6               	goto	i1l1006
  1350  0218  3A01               	xorlw	1	; case 3
  1351  0219  1903               	skipnz
  1352  021A  29F8               	goto	i1l1012
  1353  021B  3A07               	xorlw	7	; case 4
  1354  021C  1903               	skipnz
  1355  021D  29FA               	goto	i1l1018
  1356  021E  3A01               	xorlw	1	; case 5
  1357  021F  1903               	skipnz
  1358  0220  29FC               	goto	i1l1024
  1359  0221  3A03               	xorlw	3	; case 6
  1360  0222  1903               	skipnz
  1361  0223  29FE               	goto	i1l1030
  1362  0224  3A01               	xorlw	1	; case 7
  1363  0225  1903               	skipnz
  1364  0226  2A00               	goto	i1l1034
  1365  0227  3A0F               	xorlw	15	; case 8
  1366  0228  1903               	skipnz
  1367  0229  2A02               	goto	i1l1040
  1368  022A  3A01               	xorlw	1	; case 9
  1369  022B  1903               	skipnz
  1370  022C  2A04               	goto	i1l1046
  1371  022D  2A2E               	goto	i1l61
  1372  022E                     i1l61:
  1373  022E  0008               	return
  1374  022F                     __end_of_tabla:
  1375  007E                     btemp	set	126	;btemp
  1376  007E                     wtemp0	set	126
  1377                           
  1378                           	psect	config
  1379                           
  1380                           ;Config register CONFIG1 @ 0x2007
  1381                           ;	Oscillator Selection bits
  1382                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1383                           ;	Watchdog Timer Enable bit
  1384                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1385                           ;	Power-up Timer Enable bit
  1386                           ;	PWRTE = ON, PWRT enabled
  1387                           ;	RE3/MCLR pin function select bit
  1388                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1389                           ;	Code Protection bit
  1390                           ;	CP = OFF, Program memory code protection is disabled
  1391                           ;	Data Code Protection bit
  1392                           ;	CPD = OFF, Data memory code protection is disabled
  1393                           ;	Brown Out Reset Selection bits
  1394                           ;	BOREN = OFF, BOR disabled
  1395                           ;	Internal External Switchover bit
  1396                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1397                           ;	Fail-Safe Clock Monitor Enabled bit
  1398                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1399                           ;	Low Voltage Programming Enable bit
  1400                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1401                           ;	In-Circuit Debugger Mode bit
  1402                           ;	DEBUG = 0x1, unprogrammed default
  1403  2007                     	org	8199
  1404  2007  30C4               	dw	12484
  1405                           
  1406                           ;Config register CONFIG2 @ 0x2008
  1407                           ;	Brown-out Reset Selection bit
  1408                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1409                           ;	Flash Program Memory Self Write Enable bits
  1410                           ;	WRT = OFF, Write protection off
  1411  2008                     	org	8200
  1412  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     21      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1379
                                             16 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0      22
                                              3 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (3) _tabla                                                3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod

 _isr (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 25 23:59:31 2021

           ___awdiv@sign 002D                      l333 0194                      l346 01EF  
                    u300 0172                      u301 0171                      u320 0186  
                    u240 0133                      u321 0185                      u305 016E  
                    u241 0132                      u330 018B                      u250 013E  
                    u410 01E1                      u331 018A                      u315 017A  
                    u251 013D                      u411 01E0                      u260 014F  
                    u420 01E6                      u340 019C                      u261 014E  
                    u421 01E5                      u405 01D5                      u341 019B  
                    u350 01A7                      u351 01A6                      u280 0161  
                    u360 01B2                      u281 0160                      u361 01B1  
                    u275 0153                      u380 01C4                      u381 01C3  
                    u390 01CE                      u295 0162                      u391 01CD  
                    u375 01B6                      u395 01CA                      _isr 00B1  
                    fsr0 0004             ___awmod@sign 0026                     l1100 0190  
                   l1110 01A1                     l1120 01B5                     l1112 01A3  
                   l1104 0195                     l1130 01D4                     l1122 01BC  
                   l1114 01A7                     l1106 0198                     l1210 0024  
                   l1060 012C                     l1132 01DB                     l1124 01C0  
                   l1116 01AC                     l1108 019C                     l1220 0038  
                   l1212 0025                     l1070 013E                     l1062 012F  
                   l1126 01C4                     l1118 01B2                     l1134 01E1  
                   l1230 0041                     l1222 0039                     l1214 0032  
                   l1206 001A                     l1080 0152                     l1072 0143  
                   l1064 0133                     l1136 01E6                     l1128 01CE  
                   l1240 0048                     l1232 0042                     l1224 003A  
                   l1216 0034                     l1208 0020                     l1090 0178  
                   l1082 0159                     l1074 0147                     l1066 0138  
                   l1138 01EB                     l1242 005F                     l1234 0043  
                   l1226 003B                     l1218 0037                     l1092 0179  
                   l1084 015D                     l1076 0149                     l1068 013A  
                   l1244 0084                     l1236 0044                     l1228 0040  
                   l1094 0180                     l1086 0161                     l1078 014F  
                   l1246 009A                     l1238 0045                     l1088 0172  
                   l1096 0186                     l1098 018B                     ?_isr 0070  
                   _T0IF 005A                     i1l61 022E                     i1l80 0122  
                   i1l86 0123                     _TMR0 0001                     _main 001A  
                   btemp 007E                     start 000E                    ??_isr 0073  
                  ?_main 0070          __end_of___awdiv 0195          __end_of___awmod 01F0  
                  _ANSEL 0188          ___awdiv@divisor 0027                    i1l992 01F1  
                  i1l994 01F2          ___awdiv@counter 002C                    u43_20 00B8  
                  u43_21 00B7                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u44_20 00C1  
                  u44_21 00C0                    u45_20 00D1                    u45_21 00D0  
                  u46_20 00DE                    u46_21 00DD                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _tabla 01F0                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00B1  
                 ??_main 0030                   _ADCON0 001F                   _ADCON1 009F  
                 ?_tabla 0070                   _ADRESH 001E         ___awdiv@dividend 0029  
                 _ANSELH 0189                   i1l1000 01F4                   i1l1012 01F8  
                 i1l1030 01FE                   i1l1006 01F6                   i1l1040 0202  
                 i1l1024 01FC                   i1l1034 0200                   i1l1018 01FA  
                 i1l1300 020E                   i1l1046 0204                   i1l1054 0206  
                 i1l1150 00C8                   i1l1142 00B1                   i1l1160 00DE  
                 i1l1152 00D1                   i1l1144 00B8                   i1l1170 00ED  
                 i1l1162 00E0                   i1l1154 00D5                   i1l1146 00C1  
                 i1l1180 00FE                   i1l1172 00EE                   i1l1164 00E1  
                 i1l1156 00D9                   i1l1148 00C3                   i1l1190 010B  
                 i1l1182 00FF                   i1l1174 00EF                   i1l1166 00E3  
                 i1l1158 00DA                   i1l1192 010C                   i1l1176 00F4  
                 i1l1168 00EC                   i1l1194 010D                   i1l1186 0101  
                 i1l1178 00FD                   i1l1188 010A                   i1l1198 010F  
                 i1l1298 0117                ??___awdiv 002B                ??___awmod 0024  
       ___awdiv@quotient 002E          ___awmod@divisor 0020                   _numero 0038  
        ___awmod@counter 0025                   saved_w 007E  __end_of__initialization 0016  
         __pcstackCOMMON 0070            __end_of_tabla 022F           _OPTION_REGbits 0081  
                ??_tabla 0070               __pbssBANK0 0038               __pmaintext 001A  
             __pintentry 0004                  ___awdiv 012C                  ___awmod 0195  
                _decenas 0036                  __ptext1 0195                  __ptext2 012C  
                __ptext3 00B1                  __ptext4 01F0             __size_of_isr 007B  
       ___awmod@dividend 0022     end_of_initialization 0016             tabla@display 0072  
              _PORTBbits 0006      start_initialization 0011              __end_of_isr 012C  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
              _banderas2 0078                __pnvBANK0 0035                 ?___awdiv 0027  
               ?___awmod 0020           __size_of_tabla 003F        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _banderas 0079  
               _main$888 0033                 _centenas 0037            __size_of_main 0097  
               _unidades 0035               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
